#Written by Mehmet Gonullu
#version 1.0
#This code read a capacity report from Rubrik CDM 
#and shows tenant capacity utilized, and send an email to Global Admin to warn about exceed in utilization

#import libraries
import rubrik_cdm
import urllib3
import smtplib
from socket import gaierror
#this line disable SSL warning
urllib3.disable_warnings()

#This function used to send name of Tenant who exceeded the quota
def send_to_admin(x):
    port = 2525
    smtp_server = "smtp.mailtrap.io"
    login = "xxxxx" # paste your login generated by Mailtrap
    password =  "xxxxxxx" # paste your password generated by Mailtrap

    # Specify the sender’s and receiver’s email addresses:
    sender = "from@example.com"
    receiver = "mailtrap@example.com"

    # Type your message: use two newlines (\n) to separate the subject from the message body, and use 'f' to  automatically insert variables in the text
    message = f"""\
    Subject: "Quota Exceeded for"{x}
    To: {receiver}
    From: {sender}
    The quota of your tenant has exceeded its limit."""

    try:
      # Send your message with credentials specified above
      with smtplib.SMTP(smtp_server, port) as server:
        server.login(login, password)
        server.sendmail(sender, receiver, message)
    except (gaierror, ConnectionRefusedError):
      # tell the script to report if your message was sent or which errors need to be fixed
      print('Failed to connect to the server. Bad connection settings?')
    except smtplib.SMTPServerDisconnected:
      print('Failed to connect to the server. Wrong user/password?')
    except smtplib.SMTPException as e:
      print('SMTP error occurred: ' + str(e))
    else:
      print('Sent')
   
   
   #Configuration Parameters Change as per your Environment
API_Token="API_Key From Rubrik CDM"
rubrik_cluster_name="Rubrik_Cluster FQDN or IP" #Rubrik Cluster Name
payload_report={
  "sortBy": "Organization",
  "sortOrder": "asc",
  "requestFilters": {},
  "limit": 250
}  #This is the payload body sent to API Endpoint to get the report output sorted with "limit" as how many record to get

report_id='CustomReport:::fefc298f-968e-4572-b7f7-5e893aace2a7/table'  #copy from CDM UI should looks like CustomerReport:::hexadeciamals/table
url_report_endpoint='/report/'+report_id #generate endpoint for API call
quota=10000    #Quota in GB


rubrik=rubrik_cdm.Connect(rubrik_cluster_name,api_token=API_Token) #connect to Rubrik using API Token
capacity_raw=rubrik.post('internal',url_report_endpoint,payload_report)      #Read the report

table_org_size=capacity_raw['dataGrid']        #Extract Data

#Scan the Table to see if any tenant exceeded the "soft quota"
for  i in table_org_size: 
    print (i[1]," ",int(i[3])/1073741824,"GB")  #Convert to GB
    if(int(i[3])/1073741824>quota):
        print("An email is being sent to the Global Admin")
        send_to_admin(i[1])
        
